# --------------------( LICENSE                           )--------------------
# Copyright 2014-2019 by Alexis Pietak & Cecil Curry.
# See "LICENSE" for further details.
#
# --------------------( SYNOPSIS                          )--------------------
# Project-wide tox configuration.
#
# --------------------( SEE ALSO                          )--------------------
# * "betse/tox.ini", from which this file largely derives.

# ....................{ TOX                               }....................
# Metadata specific to tox itself.

[tox]

# Test matrix defined as a Bash-interpolated string, where tox implicitly
# expands "py" to "python" and delimits the subsequent two digits with a dot to
# associate each resulting test configuration with the basename of an external
# command running an externally installed Python interpreter.
#
# For example, setting "envlist = py27,py38" produces a test matrix exercising
# the externally installed "python2.7" and "python3.8" commands. See also:
#     https://tox.readthedocs.io/en/latest/config.html#generating-environments-conditional-settings
envlist = py3{5,6,7,8}

# Comma- and newline-delimited string listing the names of all PyPI-hosted
# projects required as mandatory dependencies to bootstrap "tox" -- typically
# including some combination of "tox" itself, "virtualenv", and/or "pip".
#
# Note that all application-specific dependencies (e.g., "numpy", "scipy")
# should be listed in the "deps" and/or "extras" settings under each
# "[testenv]" section below.
requires =
    # This "setuptools" dependency *MUST* be manially synchronized with the
    # "betse.metadeps" submodule here. "tox" requires this minimum version of
    # "setuptools" to create an sdist for this project *BEFORE* instantiating
    # the first venv. Ergo, the venv-specific "[testenv]" section below is of
    # no use to sdist generation. If omitted, "tox" fails at sdist generation
    # time with an exception resembling:
    #
    #     GLOB sdist-make: /home/leycec/py/betse/setup.py
    #     py36 inst-nodeps: /home/leycec/py/betse/.tox/.tmp/package/1/betse-1.1.1.zip
    #     ERROR: invocation failed (exit code 1), logfile: /home/leycec/py/betse/.tox/py36/log/py36-3.log
    #     =================================================== log start ===================================================
    #     Processing ./.tox/.tmp/package/1/betse-1.1.1.zip
    #         Complete output from command python setup.py egg_info:
    #         Traceback (most recent call last):
    #           File "<string>", line 1, in <module>
    #           File "/tmp/pip-0j3y5x58-build/setup.py", line 158, in <module>
    #             buputil.die_unless_setuptools_version_at_least(metadeps.SETUPTOOLS_VERSION_MIN)
    #           File "/tmp/pip-0j3y5x58-build/betse_setup/buputil.py", line 74, in die_unless_setuptools_version_at_least
    #             setuptools_version_min, setuptools.__version__))
    #         Exception: setuptools >= 38.2.0 required by this application, but only setuptools 28.8.0 found.
    #
    #         ----------------------------------------
    #     Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-0j3y5x58-build/
    #     You are using pip version 9.0.1, however version 19.3.1 is available.
    #     You should consider upgrading via the 'pip install --upgrade pip' command.
    #
    #     ==================================================== log end ====================================================
    setuptools >= 38.2.0

    # Install the most recent stable release of "virtualenv" as of this
    # writing. Note that this version dictates which versions of implicit
    # packages (e.g., "pip", "pkg_resources", "setuptools") come pre-installed
    # into each venv. If omitted, the obsolete version of "virtualenv" bundled
    # with "tox" is defaulted to; this induces non-trivial issues throughout
    # the installation toolchain, exemplified by the following "tox" warning:
    #     py36 installed: You are using pip version 9.0.1, however version
    #     19.3.1 is available. You should consider upgrading via the 'pip
    #     install --upgrade pip' command.
    # See also: https://github.com/tox-dev/tox/issues/765
    virtualenv >= 16.7.7

#FIXME: Override this from within CI configurations by passing the
#"----skip-missing-interpreters=false" when running the "tox" command,
#preventing CI runs from erroneously returning success on missing interpreters.

# Ignore Python interpreters *NOT* externally installed on the current system.
# By default, 
skip_missing_interpreters = true

# ....................{ PY.TEST                           }....................
# Metadata specific to the third-party "pytest" testing framework.

[testenv]
#FIXME: Unused in favour of "extras = test", but preserved for posterity.
# Comma- and newline-delimited string listing the names of all PyPI-hosted
# projects required as mandatory dependencies when testing this project.
#deps =
#    # This "setuptools" dependency *MUST* be manially synchronized with the
#    # "betse.metadeps" submodule here. "tox" requires this minimum version of
#    # "setuptools" to install this project's sdist on instantiating each venv.
#    # So, the "tox"-specific "[tox]" section above is of no use to sdist
#    # installation. Yup! Insane.
#    setuptools >= 38.2.0

# Comma- and newline-delimited string listing the names of all "setup.py"-based 
# "extras" required as mandatory or optional dependencies when testing this
# project.
extras =
    # Install all optional runtime dependencies to maximize test coverage.
    all

    # Install all mandatory test-specific dependencies. This is the official
    # solution supported by "tox" developers for eliminating redundancy between
    # testing dependencies listed within this file and the top-level "setup.py"
    # script. While non-intuitive, we have little recourse. See also:
    #     https://stackoverflow.com/questions/39922650/tox-tests-use-setup-py-extra-require-as-tox-deps-source
    #     https://github.com/tox-dev/tox/issues/13#issuecomment-247788280
    test

# Absolute dirname of the directory to change to for the current test
# configuration, required to avoid accidental import collisions with
# uninstalled packages of the same name residing in "{toxinidir}" (e.g.,
# "betse", "betsee"). See also the following pertinent blog post,
# "Testing your python package as installed":
#     https://blog.ganssle.io/articles/2019/08/test-as-installed.html
changedir = {envtmpdir}

# Command running the current test configuration. For disambiguity, avoid
# running any Python-based commands *EXCEPT* those explicitly prefixed by
# "{envpython}": the absolute filename of the venv-specific Python interpreter.
commands =
    # Print metadata on the current versions of Python, this project, and
    # pytest (in order) for debuggability.
    #
    # Since project metadata is also printed, captured, and squelched by a
    # subsequently exercised functional test, doing so is technically
    # redundant. However, pytest offers no means of conditionally disabling
    # output capturing for only specific tests. For efficiency and readability,
    # globally disabling output capturing is undesirable. Dismantled, this is:
    #
    # * "--headless", preventing this application from erroneously attempting
    #   to initialize interactive-only matplotlib backends (e.g., "PyQt4").
    {envpython} --version
    {envpython} -m betsee --version
    {envpython} -m pytest --version

    # Run the entire pytest-based test suite under the following options:
    #
    # * "--maxfail=3", halting testing on the third failure. See also the
    #   "betse.lib.setuptool.command.supcmdtest" submodule.
    {envpython} -m pytest --maxfail=3 {posargs} {toxinidir}

# Human-readable string synopsizing the current test configuration.
description = Exercise "{toxinidir}" with "{basepython} -m pytest".
